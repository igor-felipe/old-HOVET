{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Pick_User.Exclude_keyofUser.password-or-token-or-lastLogin__": {
				"properties": {},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.password-or-token-or-lastLogin_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.password-or-token-or-lastLogin__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserWithoutPassword": {
				"$ref": "#/components/schemas/Omit_User.password-or-token-or-lastLogin_"
			},
			"Partial_Omit_User.id-or-createdAt__": {
				"properties": {
					"password": {
						"type": "string"
					},
					"token": {
						"type": "string"
					},
					"lastLogin": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"email": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"notedBy": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UserUpdateParams": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Partial_Omit_User.id-or-createdAt__"
					},
					{
						"properties": {
							"id": {
								"type": "string"
							}
						},
						"required": [
							"id"
						],
						"type": "object"
					}
				]
			},
			"Pick_User.password-or-email-or-cpf-or-name_": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"cpf": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"password",
					"email",
					"cpf",
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreateParams": {
				"$ref": "#/components/schemas/Pick_User.password-or-email-or-cpf-or-name_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "hovet",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/users/getAll": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserWithoutPassword"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": []
			}
		},
		"/users/find": {
			"get": {
				"operationId": "Find",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserWithoutPassword"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "email",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "cpf",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "createdAt",
						"required": false,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "notedBy",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "role",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetOneById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserWithoutPassword"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/update": {
			"post": {
				"operationId": "Update",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserUpdateParams"
							}
						}
					}
				}
			}
		},
		"/users/singUp": {
			"post": {
				"operationId": "SingUp",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreateParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"tags": [
		{
			"name": "User",
			"description": "Operations about users"
		}
	]
}